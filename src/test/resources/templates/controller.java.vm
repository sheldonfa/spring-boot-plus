package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import ${cfg.queryParamPath};
import ${cfg.queryVoPath};
import ${cfg.dtoPath};
import ${cfg.dtoPath};
import ${cfg.convertPath};
import ${cfg.apiResult};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import lombok.extern.slf4j.Slf4j;
import io.geekidea.springbootplus.common.constraints.MessageCode;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.metadata.IPage;
import io.geekidea.springbootplus.util.CommonUtils;
import io.geekidea.springbootplus.util.ExceptionUtil;
#if(${cfg.paramValidation})
import javax.validation.Valid;
#end
import ${cfg.paging};
import ${cfg.idParamPath};

/**
 * <pre>
 * $!{table.comment} 前端控制器
 * </pre>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("${cfg.requestMapPrefix}${cfg.entityObjectName}")
#if(${swagger2})
@Api("$!{table.comment} API")
#end
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${cfg.serviceObjectName};

#if(${cfg.generatorStrategy} != 'SIMPLE')
    /**
     * 添加$!{table.comment}
     */
    @PostMapping("/add")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:add")
#end
#if(${swagger2})
    @ApiOperation(value = "添加${entity}对象", notes = "添加$!{table.comment}", response = ResponseWrapper.class)
#end
    public ResponseWrapper<Boolean> add${entity}(#if(${cfg.paramValidation})@Valid#end @RequestBody ${entity}Dto ${cfg.entityObjectName}Dto) throws Exception {
        ${entity} ${cfg.entityObjectName} = ${entity}Convert.to${entity}(${cfg.entityObjectName}Dto);
#if(${cfg.generatorStrategy} == 'ALL')
        boolean flag = ${cfg.serviceObjectName}.save${entity}(${cfg.entityObjectName});
#else
        boolean flag = ${cfg.serviceObjectName}.save(${cfg.entityObjectName});
#end
        return ResponseWrapper.success(MessageCode.SUCCESS.code(),flag);
    }

    /**
     * 修改$!{table.comment}
     */
    @PostMapping("/update")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:update")
#end
#if(${swagger2})
    @ApiOperation(value = "修改${entity}对象", notes = "修改$!{table.comment}", response = ResponseWrapper.class)
#end
    public ResponseWrapper<Boolean> update${entity}(#if(${cfg.paramValidation})@Valid#end @RequestBody ${entity}Dto ${cfg.entityObjectName}Dto) throws Exception {
        if(CommonUtils.empty(${cfg.entityObjectName}Dto.get${cfg.pkIdCamelNameCapitalFirst}())){
            throw ExceptionUtil.paramRequired("${cfg.pkIdCamelName}");
        }
        ${entity} ${cfg.entityObjectName} = ${entity}Convert.to${entity}(${cfg.entityObjectName}Dto);
#if(${cfg.generatorStrategy} == 'ALL')
        boolean flag = ${cfg.serviceObjectName}.update${entity}(${cfg.entityObjectName});
#else
        boolean flag = ${cfg.serviceObjectName}.updateById(${cfg.entityObjectName});
#end
        return ResponseWrapper.success(MessageCode.SUCCESS.code(),flag);
    }

    /**
     * 删除$!{table.comment}
     */
    @DeleteMapping("/delete/{id}")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:delete")
#end
#if(${swagger2})
    @ApiOperation(value = "删除${entity}对象", notes = "删除$!{table.comment}", response = ResponseWrapper.class)
#end
    public ResponseWrapper<Boolean> delete${entity}(@PathVariable("id") Long id) throws Exception {
#if(${cfg.generatorStrategy} == 'ALL')
        boolean flag = ${cfg.serviceObjectName}.delete${entity}(id);
#else
        boolean flag = ${cfg.serviceObjectName}.removeById(id);
#end
        return ResponseWrapper.success(MessageCode.SUCCESS.code(),flag);
    }

    /**
     * 获取$!{table.comment}
     */
    @GetMapping("/info/{id}")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:info")
#end
#if(${swagger2})
    @ApiOperation(value = "获取${entity}对象详情", notes = "查看$!{table.comment}", response = ${entity}QueryVo.class)
#end
    public ResponseWrapper<${entity}Dto> get${entity}(@PathVariable("id") Long id) throws Exception {
        ${entity} ${cfg.entityObjectName} = ${cfg.serviceObjectName}.get${entity}ById(id);
        ${entity}Dto ${cfg.entityObjectName}Dto =  ${entity}Convert.to${entity}Dto(${cfg.entityObjectName});
        return ResponseWrapper.success(MessageCode.SUCCESS.code(),${cfg.entityObjectName}Dto);
    }

    /**
     * $!{table.comment}分页列表
     */
    @PostMapping("/pageList")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:page")
#end
#if(${swagger2})
    @ApiOperation(value = "获取${entity}分页列表", notes = "$!{table.comment}分页列表", response = ${entity}QueryVo.class)
#end
    public ResponseWrapper<Page<${entity}Dto>> get${entity}PageList(#if(${cfg.paramValidation})@Valid#end @RequestBody ${entity}QueryParam ${cfg.entityObjectName}QueryParam) throws Exception {
        IPage<${entity}> paging = ${cfg.entityObjectName}Service.get${entity}PageList(${cfg.entityObjectName}QueryParam);
        // new page
        Page<${entity}Dto> page = new Page<>();
        page.setTotal(paging.getTotal());
        page.setRecords(${entity}Convert.to${entity}DtoList(paging.getRecords()));
        return ResponseWrapper.success(MessageCode.SUCCESS.code(),page);
    }
#end

}

#end