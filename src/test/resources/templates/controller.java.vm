package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import ${cfg.queryParamPath};
import ${cfg.queryVoPath};
import ${cfg.dtoPath};
import ${cfg.dtoPath};
import ${cfg.convertPath};
import ${cfg.apiResult};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import lombok.extern.slf4j.Slf4j;
import io.geekidea.springbootplus.common.constraints.MessageCode;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.metadata.IPage;
import io.geekidea.springbootplus.util.CommonUtils;
import io.geekidea.springbootplus.util.ExceptionUtil;
#if(${cfg.paramValidation})
import javax.validation.Valid;
#end
import ${cfg.paging};
import ${cfg.idParamPath};

/**
 * <pre>
 * $!{table.comment} 前端控制器
 * </pre>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("${cfg.requestMapPrefix}${cfg.entityObjectName}")
#if(${kotlin})
class Data${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else


public class ${table.controllerName} {

    @Autowired
    private ${table.serviceName} ${cfg.serviceObjectName};

#if(${cfg.generatorStrategy} != 'SIMPLE')
    /**
     * 添加$!{table.comment}
     */
    @PostMapping("/add")
    public ResponseEntity<ResponseWrapper<${entity}AddVo>> add${entity}(#if(${cfg.paramValidation})#end @RequestBody ${entity}AddParam param) {
        boolean flag = ${cfg.serviceObjectName}.save${entity}(param);
        return ResultUtil.success(${entity}Converter.to${entity}AddVo(flag));
    }

    /**
     * 修改$!{table.comment}
     */
    @PostMapping("/update")
    public ResponseEntity<ResponseWrapper<${entity}UpdateVo>> update${entity}(#if(${cfg.paramValidation})#end @RequestBody ${entity}UpdateParam param) {
        boolean flag = ${cfg.serviceObjectName}.update${entity}(param);
        return ResultUtil.success(${entity}Converter.to${entity}UpdateVo(flag));
    }

    /**
     * 删除$!{table.comment}
     */
    @DeleteMapping("/delete/{pk}")
    public ResponseEntity<ResponseWrapper<Boolean>> delete${entity}(@PathVariable("pk") String pk) {
        boolean flag = ${cfg.serviceObjectName}.removeById(pk);
        return ResultUtil.success(flag);
    }

    /**
     * 获取$!{table.comment}
     */
    @GetMapping("/info/{pk}")
    public ResponseEntity<ResponseWrapper<${entity}QueryResultDto>> get${entity}(@PathVariable("pk") String pk) {
        ${entity} ${cfg.entityObjectName} = ${cfg.serviceObjectName}.get${entity}ByPk(pk);
        ${entity}QueryResultDto ${cfg.entityObjectName}QueryResultDto =  ${entity}Converter.to${entity}QueryResultDto(${cfg.entityObjectName});
        return ResultUtil.success(${cfg.entityObjectName}QueryResultDto);
    }

    /**
     * $!{table.comment}列表查询
     */
    @PostMapping("/list")
    public ResponseEntity<ResponseWrapper<${entity}QueryListVo>> get${entity}List(#if(${cfg.paramValidation})#end @RequestBody ${entity}QueryParam queryParam) {
        List<${entity}> list = ${cfg.entityObjectName}Service.list(queryParam);
        // new page
        return ResultUtil.success(${entity}Converter.to${entity}QueryListVo(list));
    }

    /**
     * $!{table.comment}分页查询
     */
    @PostMapping("/pageList")
    public ResponseEntity<ResponseWrapper<Page<${entity}QueryVo>>> get${entity}PageList(#if(${cfg.paramValidation})#end @RequestBody ${entity}QueryParam queryParam) {
        IPage<${entity}> paging = ${cfg.entityObjectName}Service.pageList(queryParam);
        // new page
        Page<${entity}QueryVo> page = new Page<>();
        page.setTotal(paging.getTotal());
        page.setRecords(${entity}Converter.to${entity}QueryVoList(paging.getRecords()));
        return ResultUtil.success(page);
    }
#end

}

#end