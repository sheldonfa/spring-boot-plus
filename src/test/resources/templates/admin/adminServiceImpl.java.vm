package ${package.ServiceImpl}import com.baomidou.mybatisplus.core.metadata.IPage;

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${cfg.queryParamPath};
import ${cfg.queryVoPath};
import ${superServiceImplClassPackage};
import ${cfg.paging};
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.metadata.OrderItem;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import java.io.Serializable;


/**
 * <pre>
 * $!{table.comment} 服务实现类
 * </pre>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Service
@Transactional
public class Admin${table.serviceImplName} implements Admin${table.serviceName} {

    @Override
    public ${entity}AddResultDto add${entity}(${entity}Param paramDto,AdminDTO currentUser) {
        // step1 封装管理员信息 添加操作人邮箱、id、名称
        paramDto.setOperateId(currentUser.getUid());
        paramDto.setOperateName(currentUser.getUsername());
        paramDto.setOperateEmail(currentUser.getEmail());
        // step2 查询信息
        ${entity}QueryParamDto query = new ${entity}QueryParamDto();
        ResponseWrapper<${entity}QueryListResultDto> ${cfg.entityObjectName}QueryListResultDtoResponseWrapper = seagullDataServiceClient.get${entity}List(query);
        // step3 重复性校验
        if (Objects.nonNull(${cfg.entityObjectName}QueryListResultDtoResponseWrapper.getData())) {
            // TODO 补充提示信息
            throw ExceptionUtil.invalidParam(String.format());
        }
        // step4 保存
        ResponseWrapper<${entity}AddResultDto> wrapper = seagullDataServiceClient.addTkd(tkdDto);
        // step5 删除缓存
        // TODO 添加缓存key
        redisUtil.del(String.join(RedisConstant.SEPARATOR, , ));
        return flag.getData();
    }

    @Override
    public ${entity}UpdateResultDto update${entity}(${entity}UpdateParamDto paramDto,AdminDTO currentUser) {
        // 添加操作人邮箱、id、名称
        paramDto.setOperateId(currentUser.getUid());
        paramDto.setOperateName(currentUser.getUsername());
        paramDto.setOperateEmail(currentUser.getEmail());
        ResponseWrapper<${entity}UpdateResultDto> flag = seagullDataServiceClient.update${entity}(paramDto.getRecordId());
        // 删除缓存
        redisUtil.del(String.join(RedisConstant.SEPARATOR, RedisConstant.XP_SEAGULL_XXX, ));
        return flag.getData();
    }

    @Override
    public boolean delete${entity}ByPk(String recordId) {
        return seagullDataServiceClient.delete${entity}(recordId).getData();
    }

    @Override
    public ${entity} get${entity}ByPk(Serializable id) {
        return seagullDataServiceClient.get${entity}(recordId).getData();
    }

    @Override
    public Page<${entity}QueryVo> get${entity}PageList(${entity}QueryParam ${cfg.entityObjectName}QueryParam) {
        return seagullDataServiceClient.getTkdPageList(tkdQueryParam).getData();
    }

}
